{"version":3,"sources":["webpack:///./src/views/flightPlans/Create.vue?e2dd","webpack:///src/views/flightPlans/Create.vue","webpack:///./src/views/flightPlans/Create.vue?4eec","webpack:///./src/views/flightPlans/Create.vue","webpack:///./src/mixins/Draw.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","staticClass","attrs","on","createPolyline","staticRenderFns","components","MapViewer","mixins","Draw","map","$refs","createMap","component","data","currentId","beforeDestroy","editTools","off","methods","editPolyline","flightPlan","polyline","L","points","addTo","enableEdit","polylineBounds","fitBounds","animate","padding","saveAutoPolyline","startPolyline","leafletLayer","async","createFlightPlan","getLatLngs","point","lat","lng","savePoints","id","mapActions"],"mappings":"8HAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,aAAa,CAACE,IAAI,YAAYC,YAAY,gBAAgBC,MAAM,CAAC,UAAW,EAAK,yBAAwB,GAAMC,GAAG,CAAC,eAAeT,EAAIU,mBACrOC,EAAkB,G,wBCctB,GACEC,WAAY,CACVC,UAAJ,QAEEC,OAAQ,CAACC,EAAX,MACE,UACEd,KAAKe,IAAMf,KAAKgB,MAAMC,UAAUF,IAEhCf,KAAKS,mBCvBsV,I,YCO3VS,EAAY,eACd,EACApB,EACAY,GACA,EACA,KACA,KACA,MAIa,aAAAQ,E,2CClBf,4BAIe,QACbC,KAAM,KAAM,CACVC,UAAW,OAEbC,gBACErB,KAAKe,IAAIO,UAAUC,IAAI,qBAEzBC,QAAS,CACPC,aAAaC,GAEX,MAAMC,EAAW,IAAIC,cAAWF,EAAWG,QAC3CF,EAASG,MAAM9B,KAAKe,KACpBY,EAASI,aAGT,MAAMC,EAAiBJ,kBAAeF,EAAWG,QACjD7B,KAAKe,IAAIkB,UAAUD,EAAgB,CAAEE,SAAS,EAAOC,QAAS,CAAC,GAAI,MAGnEnC,KAAKoC,iBAAiBT,IAExBlB,iBAEE,MAAMkB,EAAW3B,KAAKe,IAAIO,UAAUe,gBAGpCrC,KAAKoC,iBAAiBT,IAExBS,iBAAiBE,GACftC,KAAKe,IAAIO,UAAUd,GAAG,mBAAoB+B,UAEjB,OAAnBvC,KAAKoB,YACPpB,KAAKoB,gBAAkBpB,KAAKwC,oBAG9B,MAAMX,EAASS,EACZG,aACA1B,IAAK2B,GAAU,CAACA,EAAMC,IAAKD,EAAME,MACpC5C,KAAK6C,WAAW,CAAEC,GAAI9C,KAAKoB,UAAWS,iBAGvCkB,eAAW,cAAe,CAAC,mBAAoB","file":"js/RouteCreateFlightPlan.54cc237a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('map-viewer',{ref:\"createMap\",staticClass:\"h-full w-full\",attrs:{\"editable\":true,\"save-location-on-move\":true},on:{\"restart-draw\":_vm.createPolyline}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <map-viewer\n    ref=\"createMap\"\n    :editable=\"true\"\n    :save-location-on-move=\"true\"\n    class=\"h-full w-full\"\n    @restart-draw=\"createPolyline\"\n  />\n</template>\n\n<script>\nimport Draw from \"@/mixins/Draw\";\n\nimport MapViewer from \"@/components/MapViewer\";\n\nexport default {\n  components: {\n    MapViewer,\n  },\n  mixins: [Draw],\n  mounted() {\n    this.map = this.$refs.createMap.map;\n\n    this.createPolyline();\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Create.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Create.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Create.vue?vue&type=template&id=47a81a02&\"\nimport script from \"./Create.vue?vue&type=script&lang=js&\"\nexport * from \"./Create.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import * as L from \"leaflet\";\n\nimport { mapActions } from \"vuex\";\n\nexport default {\n  data: () => ({\n    currentId: null,\n  }),\n  beforeDestroy() {\n    this.map.editTools.off(\"editable:editing\");\n  },\n  methods: {\n    editPolyline(flightPlan) {\n      // Restore polyine from flight plan\n      const polyline = new L.polyline(flightPlan.points);\n      polyline.addTo(this.map);\n      polyline.enableEdit();\n\n      // Set view to encompass polyline\n      const polylineBounds = L.latLngBounds(flightPlan.points);\n      this.map.fitBounds(polylineBounds, { animate: false, padding: [15, 15] });\n\n      // Initiate save\n      this.saveAutoPolyline(polyline);\n    },\n    createPolyline() {\n      // Start drawing tool directly on load\n      const polyline = this.map.editTools.startPolyline();\n\n      // Auto-save at each edit\n      this.saveAutoPolyline(polyline);\n    },\n    saveAutoPolyline(leafletLayer) {\n      this.map.editTools.on(\"editable:editing\", async () => {\n        // Create a new flight plan if no flightPlan have been created\n        if (this.currentId === null) {\n          this.currentId = await this.createFlightPlan();\n        }\n\n        const points = leafletLayer\n          .getLatLngs()\n          .map((point) => [point.lat, point.lng]);\n        this.savePoints({ id: this.currentId, points });\n      });\n    },\n    ...mapActions(\"flightPlans\", [\"createFlightPlan\", \"savePoints\"]),\n  }\n};\n"],"sourceRoot":""}