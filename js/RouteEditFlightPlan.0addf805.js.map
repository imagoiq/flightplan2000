{"version":3,"sources":["webpack:///./src/mixins/Draw.js","webpack:///./src/views/flightPlans/Edit.vue?12be","webpack:///src/views/flightPlans/Edit.vue","webpack:///./src/views/flightPlans/Edit.vue?34d9","webpack:///./src/views/flightPlans/Edit.vue"],"names":["data","currentId","beforeDestroy","this","map","editTools","off","methods","editPolyline","flightPlan","polyline","L","points","addTo","enableEdit","polylineBounds","fitBounds","animate","padding","saveAutoPolyline","createPolyline","startPolyline","leafletLayer","on","async","createFlightPlan","getLatLngs","point","lat","lng","savePoints","id","mapActions","render","_vm","_h","$createElement","_c","_self","ref","staticClass","attrs","staticRenderFns","components","MapViewer","mixins","Draw","computed","$refs","editMap","paramsId","parseInt","list","find","fp","numberOfPoints","component"],"mappings":"qHAAA,4BAIe,QACbA,KAAM,KAAM,CACVC,UAAW,OAEbC,gBACEC,KAAKC,IAAIC,UAAUC,IAAI,qBAEzBC,QAAS,CACPC,aAAaC,GAEX,MAAMC,EAAW,IAAIC,cAAWF,EAAWG,QAC3CF,EAASG,MAAMV,KAAKC,KACpBM,EAASI,aAGT,MAAMC,EAAiBJ,kBAAeF,EAAWG,QACjDT,KAAKC,IAAIY,UAAUD,EAAgB,CAAEE,SAAS,EAAOC,QAAS,CAAC,GAAI,MAGnEf,KAAKgB,iBAAiBT,IAExBU,iBAEE,MAAMV,EAAWP,KAAKC,IAAIC,UAAUgB,gBAGpClB,KAAKgB,iBAAiBT,IAExBS,iBAAiBG,GACfnB,KAAKC,IAAIC,UAAUkB,GAAG,mBAAoBC,UAEjB,OAAnBrB,KAAKF,YACPE,KAAKF,gBAAkBE,KAAKsB,oBAG9B,MAAMb,EAASU,EACZI,aACAtB,IAAKuB,GAAU,CAACA,EAAMC,IAAKD,EAAME,MACpC1B,KAAK2B,WAAW,CAAEC,GAAI5B,KAAKF,UAAWW,iBAGvCoB,eAAW,cAAe,CAAC,mBAAoB,kB,yCC7CtD,IAAIC,EAAS,WAAa,IAAIC,EAAI/B,KAASgC,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,aAAa,CAACE,IAAI,UAAUC,YAAY,gBAAgBC,MAAM,CAAC,UAAW,EAAK,yBAAwB,GAAMlB,GAAG,CAAC,eAAeW,EAAId,mBACnOsB,EAAkB,G,oCCgBtB,GACEC,WAAY,CACVC,UAAJ,QAEEC,OAAQ,CAACC,EAAX,MACEC,SAAU,IACZ,wCAEE,UAAF,MACI5C,KAAKC,IAAMD,KAAK6C,MAAMC,QAAQ7C,IAG9B,MAAM8C,EAAWC,SAArB,oEACU1C,EAAaN,KAAKiD,KAAKC,KAAKC,GAAMA,EAAGvB,KAAOmB,GAC5CK,EAAV,OAA2B9C,QAA3B,6BAEI,IAAJ,EAEM,KAAM,qCAIZ,oCACMN,KAAKF,UAAYQ,EAAWsB,IAIlC,KACM5B,KAAKK,aAAaC,GAIxB,OACMN,KAAKiB,mBClDkV,I,YCOzVoC,EAAY,eACd,EACAvB,EACAS,GACA,EACA,KACA,KACA,MAIa,aAAAc,E","file":"js/RouteEditFlightPlan.0addf805.js","sourcesContent":["import * as L from \"leaflet\";\n\nimport { mapActions } from \"vuex\";\n\nexport default {\n  data: () => ({\n    currentId: null,\n  }),\n  beforeDestroy() {\n    this.map.editTools.off(\"editable:editing\");\n  },\n  methods: {\n    editPolyline(flightPlan) {\n      // Restore polyine from flight plan\n      const polyline = new L.polyline(flightPlan.points);\n      polyline.addTo(this.map);\n      polyline.enableEdit();\n\n      // Set view to encompass polyline\n      const polylineBounds = L.latLngBounds(flightPlan.points);\n      this.map.fitBounds(polylineBounds, { animate: false, padding: [15, 15] });\n\n      // Initiate save\n      this.saveAutoPolyline(polyline);\n    },\n    createPolyline() {\n      // Start drawing tool directly on load\n      const polyline = this.map.editTools.startPolyline();\n\n      // Auto-save at each edit\n      this.saveAutoPolyline(polyline);\n    },\n    saveAutoPolyline(leafletLayer) {\n      this.map.editTools.on(\"editable:editing\", async () => {\n        // Create a new flight plan if no flightPlan have been created\n        if (this.currentId === null) {\n          this.currentId = await this.createFlightPlan();\n        }\n\n        const points = leafletLayer\n          .getLatLngs()\n          .map((point) => [point.lat, point.lng]);\n        this.savePoints({ id: this.currentId, points });\n      });\n    },\n    ...mapActions(\"flightPlans\", [\"createFlightPlan\", \"savePoints\"]),\n  }\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('map-viewer',{ref:\"editMap\",staticClass:\"h-full w-full\",attrs:{\"editable\":true,\"save-location-on-move\":true},on:{\"restart-draw\":_vm.createPolyline}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <map-viewer\n    ref=\"editMap\"\n    :editable=\"true\"\n    :save-location-on-move=\"true\"\n    class=\"h-full w-full\"\n    @restart-draw=\"createPolyline\"\n  />\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n\nimport Draw from \"@/mixins/Draw\";\n\nimport MapViewer from \"@/components/MapViewer\";\n\nexport default {\n  components: {\n    MapViewer,\n  },\n  mixins: [Draw],\n  computed: {\n    ...mapState(\"flightPlans\", [\"list\"]),\n  },\n  mounted() {\n    this.map = this.$refs.editMap.map;\n\n    // Find given flight plan\n    const paramsId = parseInt(this.$route.params?.flightPlanId, 10);\n    const flightPlan = this.list.find(fp => fp.id === paramsId);\n    const numberOfPoints = flightPlan?.points.length;\n\n    if(!flightPlan) {\n      // TODO Make a real error and a feedback to the user\n      throw 'No flight plan found with this id';\n    }\n\n    // Define current flight plan id\n    if(flightPlan?.id){\n      this.currentId = flightPlan.id;\n    }\n\n    // Start edition of the polyline\n    if(numberOfPoints > 0){\n      this.editPolyline(flightPlan);\n    }\n\n    // TODO Improve usability if user delete all the points. (Probably with a modal)\n    if(numberOfPoints === 0){\n      this.createPolyline();\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Edit.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Edit.vue?vue&type=template&id=cbd843fc&\"\nimport script from \"./Edit.vue?vue&type=script&lang=js&\"\nexport * from \"./Edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}